struct Tree {
   left: *Tree,
   right: *Tree,

   # Store the value here
   value: Int,
};

##############################
#                            #
#         +---+              #
#         | 2 |              #
#         +---+              #
#   +---+       +---+        #
#   | 1 |       | 3 |        #
#   +---+       +---+        #
#                     +---+  #
#                     | 4 |  #
#                     +---+  #
#                            #
##############################
                      
var tr1 = Tree:{unit, unit, 1};
var tr4 = Tree:{unit, unit, 4};
var tr3 = Tree:{unit, &tr4, 3};
var tr2 = Tree:{&tr1, &tr3, 2};

fun binSearchInt(tree: *Tree, val: Int) Bool {
    if isNull(tree) {
        return false;
    };

    var nodeValue = (*tree).value;

    if nodeValue == val {
       return true;
    };

    var subtree = if nodeValue < val {
        (*tree).left
    } else {
        (*tree).right
    };

    binSearchInt(subtree, val)
}
